name: End to End tests

on:
  workflow_call:
    inputs:
      priorities:
        description: "Priorities of tests to register (comma-separated)"
        required: true
        type: string
jobs:
  endtoend:
    name: End to End tests
    runs-on: ubuntu-latest
    env:
      FLYTESNACKS_VERSION: ""
    steps:
      - uses: insightsengineering/disk-space-reclaimer@v1
      - name: Set latest Flytesnacks release
        if: ${{ env.FLYTESNACKS_VERSION == '' }}
        run: |
          FLYTESNACKS_VERSION="$(curl --silent https://api.github.com/repos/flyteorg/flytesnacks/releases/latest | jq -r .tag_name)"
          echo "FLYTESNACKS_VERSION=${FLYTESNACKS_VERSION}" >> ${GITHUB_ENV}
      - name: Checkout
        uses: actions/checkout@v4
      - uses: unionai/flytectl-setup-action@v0.0.1
        name: Setup flytectl
      - uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Create Sandbox Cluster
        run: |
          flytectl config init
          flytectl demo start --source=$(pwd) --image ghcr.io/${{ github.repository_owner }}/flyte-sandbox-bundled:latest --disable-agent
      - name: Setup Flytekit
        run: |
          python -m pip install --upgrade pip
          pip install flytekit flytekitplugins-deck-standard
          pip freeze
      - name: Checkout flytesnacks
        if: ${{ inputs.priorities == 'P0' }}
        uses: actions/checkout@v4
        with:
          repository: flyteorg/flytesnacks
          path: flytesnacks
          ref: ${{ env.FLYTESNACKS_VERSION }}
      - name: Register flytesnacks examples
        if: ${{ inputs.priorities == 'P0' }}
        run: |
          flytectl --config ./boilerplate/flyte/end2end/functional-test-config.yaml \
          register examples \
          --project flytesnacks \
          --domain development
      - name: Run flytesnacks examples
        env:
          PRIORITIES: "${{ inputs.priorities }}"
        run: |
          make end2end_execute
