// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/execution_envs.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecutionEnvironmentAssignment struct {
	Id      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeIds []string `protobuf:"bytes,2,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	Type    string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	// Types that are valid to be assigned to Assignment:
	//	*ExecutionEnvironmentAssignment_Environment
	//	*ExecutionEnvironmentAssignment_EnvironmentSpec
	Assignment           isExecutionEnvironmentAssignment_Assignment `protobuf_oneof:"assignment"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *ExecutionEnvironmentAssignment) Reset()         { *m = ExecutionEnvironmentAssignment{} }
func (m *ExecutionEnvironmentAssignment) String() string { return proto.CompactTextString(m) }
func (*ExecutionEnvironmentAssignment) ProtoMessage()    {}
func (*ExecutionEnvironmentAssignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_850f074241de0d78, []int{0}
}

func (m *ExecutionEnvironmentAssignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionEnvironmentAssignment.Unmarshal(m, b)
}
func (m *ExecutionEnvironmentAssignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionEnvironmentAssignment.Marshal(b, m, deterministic)
}
func (m *ExecutionEnvironmentAssignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionEnvironmentAssignment.Merge(m, src)
}
func (m *ExecutionEnvironmentAssignment) XXX_Size() int {
	return xxx_messageInfo_ExecutionEnvironmentAssignment.Size(m)
}
func (m *ExecutionEnvironmentAssignment) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionEnvironmentAssignment.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionEnvironmentAssignment proto.InternalMessageInfo

func (m *ExecutionEnvironmentAssignment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ExecutionEnvironmentAssignment) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

func (m *ExecutionEnvironmentAssignment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type isExecutionEnvironmentAssignment_Assignment interface {
	isExecutionEnvironmentAssignment_Assignment()
}

type ExecutionEnvironmentAssignment_Environment struct {
	Environment *_struct.Struct `protobuf:"bytes,4,opt,name=environment,proto3,oneof"`
}

type ExecutionEnvironmentAssignment_EnvironmentSpec struct {
	EnvironmentSpec *_struct.Struct `protobuf:"bytes,5,opt,name=environment_spec,json=environmentSpec,proto3,oneof"`
}

func (*ExecutionEnvironmentAssignment_Environment) isExecutionEnvironmentAssignment_Assignment() {}

func (*ExecutionEnvironmentAssignment_EnvironmentSpec) isExecutionEnvironmentAssignment_Assignment() {}

func (m *ExecutionEnvironmentAssignment) GetAssignment() isExecutionEnvironmentAssignment_Assignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

func (m *ExecutionEnvironmentAssignment) GetEnvironment() *_struct.Struct {
	if x, ok := m.GetAssignment().(*ExecutionEnvironmentAssignment_Environment); ok {
		return x.Environment
	}
	return nil
}

func (m *ExecutionEnvironmentAssignment) GetEnvironmentSpec() *_struct.Struct {
	if x, ok := m.GetAssignment().(*ExecutionEnvironmentAssignment_EnvironmentSpec); ok {
		return x.EnvironmentSpec
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ExecutionEnvironmentAssignment) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ExecutionEnvironmentAssignment_Environment)(nil),
		(*ExecutionEnvironmentAssignment_EnvironmentSpec)(nil),
	}
}

func init() {
	proto.RegisterType((*ExecutionEnvironmentAssignment)(nil), "flyteidl.core.ExecutionEnvironmentAssignment")
}

func init() { proto.RegisterFile("flyteidl/core/execution_envs.proto", fileDescriptor_850f074241de0d78) }

var fileDescriptor_850f074241de0d78 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0x3d, 0x4f, 0xc3, 0x30,
	0x18, 0x84, 0x49, 0x5b, 0x3e, 0xea, 0xf2, 0x25, 0x2f, 0x04, 0x84, 0x50, 0xd4, 0x29, 0x0b, 0xb6,
	0x04, 0x1b, 0xb0, 0x50, 0x51, 0x09, 0xd6, 0x74, 0x63, 0x89, 0x88, 0xfd, 0xd6, 0x58, 0x4a, 0xfd,
	0x5a, 0xb6, 0x53, 0xd1, 0x7f, 0xcd, 0x4f, 0x40, 0x75, 0x94, 0x12, 0x26, 0xb6, 0x3b, 0xf9, 0xf1,
	0xf9, 0x7c, 0x64, 0xba, 0xac, 0x37, 0x01, 0xb4, 0xac, 0xb9, 0x40, 0x07, 0x1c, 0xbe, 0x40, 0x34,
	0x41, 0xa3, 0x29, 0xc1, 0xac, 0x3d, 0xb3, 0x0e, 0x03, 0xd2, 0x93, 0x8e, 0x61, 0x5b, 0xe6, 0xea,
	0x5a, 0x21, 0xaa, 0x1a, 0x78, 0x3c, 0xac, 0x9a, 0x25, 0xf7, 0xc1, 0x35, 0x22, 0xb4, 0xf0, 0xf4,
	0x3b, 0x21, 0x37, 0xf3, 0x2e, 0x65, 0x6e, 0xd6, 0xda, 0xa1, 0x59, 0x81, 0x09, 0xcf, 0xde, 0x6b,
	0x15, 0x15, 0x3d, 0x25, 0x03, 0x2d, 0xd3, 0x24, 0x4b, 0xf2, 0x71, 0x31, 0xd0, 0x92, 0x5e, 0x92,
	0x23, 0x83, 0x12, 0x4a, 0x2d, 0x7d, 0x3a, 0xc8, 0x86, 0xf9, 0xb8, 0x38, 0xdc, 0xfa, 0x37, 0xe9,
	0x29, 0x25, 0xa3, 0xb0, 0xb1, 0x90, 0x0e, 0x23, 0x1c, 0x35, 0x7d, 0x24, 0x13, 0xf8, 0xcd, 0x4d,
	0x47, 0x59, 0x92, 0x4f, 0xee, 0x2e, 0x58, 0xdb, 0x8a, 0x75, 0xad, 0xd8, 0x22, 0xb6, 0x7a, 0xdd,
	0x2b, 0xfa, 0x34, 0x7d, 0x21, 0xe7, 0x3d, 0x5b, 0x7a, 0x0b, 0x22, 0xdd, 0xff, 0x2f, 0xe1, 0xac,
	0x77, 0x65, 0x61, 0x41, 0xcc, 0x8e, 0x09, 0xf9, 0xd8, 0xfd, 0x67, 0xf6, 0xf4, 0xfe, 0xa0, 0x74,
	0xf8, 0x6c, 0x2a, 0x26, 0x70, 0xc5, 0xe3, 0x58, 0xe8, 0x54, 0x2b, 0xf8, 0x6e, 0x5f, 0x05, 0x86,
	0xdb, 0xea, 0x56, 0x21, 0xff, 0x33, 0x79, 0x75, 0x10, 0xdf, 0xbb, 0xff, 0x09, 0x00, 0x00, 0xff,
	0xff, 0x2b, 0x91, 0x44, 0xca, 0x8a, 0x01, 0x00, 0x00,
}
