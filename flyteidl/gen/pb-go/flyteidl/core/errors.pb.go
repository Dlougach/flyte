// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/core/errors.proto

package core

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Defines a generic error type that dictates the behavior of the retry strategy.
type ContainerError_Kind int32

const (
	ContainerError_NON_RECOVERABLE ContainerError_Kind = 0
	ContainerError_RECOVERABLE     ContainerError_Kind = 1
)

var ContainerError_Kind_name = map[int32]string{
	0: "NON_RECOVERABLE",
	1: "RECOVERABLE",
}

var ContainerError_Kind_value = map[string]int32{
	"NON_RECOVERABLE": 0,
	"RECOVERABLE":     1,
}

func (x ContainerError_Kind) String() string {
	return proto.EnumName(ContainerError_Kind_name, int32(x))
}

func (ContainerError_Kind) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{0, 0}
}

// Defines codes for distinguishing between errors encountered during cache eviction.
type CacheEvictionError_Code int32

const (
	// Indicates a generic internal error occurred.
	CacheEvictionError_INTERNAL CacheEvictionError_Code = 0
	// Indicates no reservation could be acquired before deleting an artifact.
	CacheEvictionError_RESERVATION_NOT_ACQUIRED CacheEvictionError_Code = 1
	// Indicates updating the database entry related to the node execution failed.
	CacheEvictionError_DATABASE_UPDATE_FAILED CacheEvictionError_Code = 2
	// Indicates deleting the artifact from datacatalog failed.
	CacheEvictionError_ARTIFACT_DELETE_FAILED CacheEvictionError_Code = 3
	// Indicates the reservation previously acquired could not be released for an artifact.
	CacheEvictionError_RESERVATION_NOT_RELEASED CacheEvictionError_Code = 4
)

var CacheEvictionError_Code_name = map[int32]string{
	0: "INTERNAL",
	1: "RESERVATION_NOT_ACQUIRED",
	2: "DATABASE_UPDATE_FAILED",
	3: "ARTIFACT_DELETE_FAILED",
	4: "RESERVATION_NOT_RELEASED",
}

var CacheEvictionError_Code_value = map[string]int32{
	"INTERNAL":                 0,
	"RESERVATION_NOT_ACQUIRED": 1,
	"DATABASE_UPDATE_FAILED":   2,
	"ARTIFACT_DELETE_FAILED":   3,
	"RESERVATION_NOT_RELEASED": 4,
}

func (x CacheEvictionError_Code) String() string {
	return proto.EnumName(CacheEvictionError_Code_name, int32(x))
}

func (CacheEvictionError_Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{2, 0}
}

// Error message to propagate detailed errors from container executions to the execution
// engine.
type ContainerError struct {
	// A simplified code for errors, so that we can provide a glossary of all possible errors.
	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	// A detailed error message.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// An abstract error kind for this error. Defaults to Non_Recoverable if not specified.
	Kind ContainerError_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=flyteidl.core.ContainerError_Kind" json:"kind,omitempty"`
	// Defines the origin of the error (system, user, unknown).
	Origin               ExecutionError_ErrorKind `protobuf:"varint,4,opt,name=origin,proto3,enum=flyteidl.core.ExecutionError_ErrorKind" json:"origin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ContainerError) Reset()         { *m = ContainerError{} }
func (m *ContainerError) String() string { return proto.CompactTextString(m) }
func (*ContainerError) ProtoMessage()    {}
func (*ContainerError) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{0}
}

func (m *ContainerError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerError.Unmarshal(m, b)
}
func (m *ContainerError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerError.Marshal(b, m, deterministic)
}
func (m *ContainerError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerError.Merge(m, src)
}
func (m *ContainerError) XXX_Size() int {
	return xxx_messageInfo_ContainerError.Size(m)
}
func (m *ContainerError) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerError.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerError proto.InternalMessageInfo

func (m *ContainerError) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ContainerError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *ContainerError) GetKind() ContainerError_Kind {
	if m != nil {
		return m.Kind
	}
	return ContainerError_NON_RECOVERABLE
}

func (m *ContainerError) GetOrigin() ExecutionError_ErrorKind {
	if m != nil {
		return m.Origin
	}
	return ExecutionError_UNKNOWN
}

// Defines the errors.pb file format the container can produce to communicate
// failure reasons to the execution engine.
type ErrorDocument struct {
	// The error raised during execution.
	Error                *ContainerError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ErrorDocument) Reset()         { *m = ErrorDocument{} }
func (m *ErrorDocument) String() string { return proto.CompactTextString(m) }
func (*ErrorDocument) ProtoMessage()    {}
func (*ErrorDocument) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{1}
}

func (m *ErrorDocument) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorDocument.Unmarshal(m, b)
}
func (m *ErrorDocument) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorDocument.Marshal(b, m, deterministic)
}
func (m *ErrorDocument) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorDocument.Merge(m, src)
}
func (m *ErrorDocument) XXX_Size() int {
	return xxx_messageInfo_ErrorDocument.Size(m)
}
func (m *ErrorDocument) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorDocument.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorDocument proto.InternalMessageInfo

func (m *ErrorDocument) GetError() *ContainerError {
	if m != nil {
		return m.Error
	}
	return nil
}

// Error returned if eviction of cached output fails and should be re-tried by the user.
type CacheEvictionError struct {
	// Error code to match type of cache eviction error encountered.
	Code CacheEvictionError_Code `protobuf:"varint,1,opt,name=code,proto3,enum=flyteidl.core.CacheEvictionError_Code" json:"code,omitempty"`
	// More detailed error message explaining the reason for the cache eviction failure.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// ID of the node execution the cache eviction failed for.
	NodeExecutionId *NodeExecutionIdentifier `protobuf:"bytes,3,opt,name=node_execution_id,json=nodeExecutionId,proto3" json:"node_execution_id,omitempty"`
	// Source of the node execution.
	//
	// Types that are valid to be assigned to Source:
	//	*CacheEvictionError_TaskExecutionId
	//	*CacheEvictionError_WorkflowExecutionId
	Source               isCacheEvictionError_Source `protobuf_oneof:"source"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CacheEvictionError) Reset()         { *m = CacheEvictionError{} }
func (m *CacheEvictionError) String() string { return proto.CompactTextString(m) }
func (*CacheEvictionError) ProtoMessage()    {}
func (*CacheEvictionError) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{2}
}

func (m *CacheEvictionError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheEvictionError.Unmarshal(m, b)
}
func (m *CacheEvictionError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheEvictionError.Marshal(b, m, deterministic)
}
func (m *CacheEvictionError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheEvictionError.Merge(m, src)
}
func (m *CacheEvictionError) XXX_Size() int {
	return xxx_messageInfo_CacheEvictionError.Size(m)
}
func (m *CacheEvictionError) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheEvictionError.DiscardUnknown(m)
}

var xxx_messageInfo_CacheEvictionError proto.InternalMessageInfo

func (m *CacheEvictionError) GetCode() CacheEvictionError_Code {
	if m != nil {
		return m.Code
	}
	return CacheEvictionError_INTERNAL
}

func (m *CacheEvictionError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *CacheEvictionError) GetNodeExecutionId() *NodeExecutionIdentifier {
	if m != nil {
		return m.NodeExecutionId
	}
	return nil
}

type isCacheEvictionError_Source interface {
	isCacheEvictionError_Source()
}

type CacheEvictionError_TaskExecutionId struct {
	TaskExecutionId *TaskExecutionIdentifier `protobuf:"bytes,4,opt,name=task_execution_id,json=taskExecutionId,proto3,oneof"`
}

type CacheEvictionError_WorkflowExecutionId struct {
	WorkflowExecutionId *WorkflowExecutionIdentifier `protobuf:"bytes,5,opt,name=workflow_execution_id,json=workflowExecutionId,proto3,oneof"`
}

func (*CacheEvictionError_TaskExecutionId) isCacheEvictionError_Source() {}

func (*CacheEvictionError_WorkflowExecutionId) isCacheEvictionError_Source() {}

func (m *CacheEvictionError) GetSource() isCacheEvictionError_Source {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *CacheEvictionError) GetTaskExecutionId() *TaskExecutionIdentifier {
	if x, ok := m.GetSource().(*CacheEvictionError_TaskExecutionId); ok {
		return x.TaskExecutionId
	}
	return nil
}

func (m *CacheEvictionError) GetWorkflowExecutionId() *WorkflowExecutionIdentifier {
	if x, ok := m.GetSource().(*CacheEvictionError_WorkflowExecutionId); ok {
		return x.WorkflowExecutionId
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CacheEvictionError) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CacheEvictionError_TaskExecutionId)(nil),
		(*CacheEvictionError_WorkflowExecutionId)(nil),
	}
}

// List of :ref:`ref_flyteidl.core.CacheEvictionError` encountered during a cache eviction request.
type CacheEvictionErrorList struct {
	Errors               []*CacheEvictionError `protobuf:"bytes,1,rep,name=errors,proto3" json:"errors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CacheEvictionErrorList) Reset()         { *m = CacheEvictionErrorList{} }
func (m *CacheEvictionErrorList) String() string { return proto.CompactTextString(m) }
func (*CacheEvictionErrorList) ProtoMessage()    {}
func (*CacheEvictionErrorList) Descriptor() ([]byte, []int) {
	return fileDescriptor_c2a49b99f342b879, []int{3}
}

func (m *CacheEvictionErrorList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheEvictionErrorList.Unmarshal(m, b)
}
func (m *CacheEvictionErrorList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheEvictionErrorList.Marshal(b, m, deterministic)
}
func (m *CacheEvictionErrorList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheEvictionErrorList.Merge(m, src)
}
func (m *CacheEvictionErrorList) XXX_Size() int {
	return xxx_messageInfo_CacheEvictionErrorList.Size(m)
}
func (m *CacheEvictionErrorList) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheEvictionErrorList.DiscardUnknown(m)
}

var xxx_messageInfo_CacheEvictionErrorList proto.InternalMessageInfo

func (m *CacheEvictionErrorList) GetErrors() []*CacheEvictionError {
	if m != nil {
		return m.Errors
	}
	return nil
}

func init() {
	proto.RegisterEnum("flyteidl.core.ContainerError_Kind", ContainerError_Kind_name, ContainerError_Kind_value)
	proto.RegisterEnum("flyteidl.core.CacheEvictionError_Code", CacheEvictionError_Code_name, CacheEvictionError_Code_value)
	proto.RegisterType((*ContainerError)(nil), "flyteidl.core.ContainerError")
	proto.RegisterType((*ErrorDocument)(nil), "flyteidl.core.ErrorDocument")
	proto.RegisterType((*CacheEvictionError)(nil), "flyteidl.core.CacheEvictionError")
	proto.RegisterType((*CacheEvictionErrorList)(nil), "flyteidl.core.CacheEvictionErrorList")
}

func init() { proto.RegisterFile("flyteidl/core/errors.proto", fileDescriptor_c2a49b99f342b879) }

var fileDescriptor_c2a49b99f342b879 = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x61, 0x6b, 0xd3, 0x40,
	0x18, 0xc7, 0x97, 0x2d, 0xab, 0xf3, 0xa9, 0x5b, 0xbb, 0x1b, 0x8e, 0x50, 0x9c, 0xd4, 0xbc, 0xd0,
	0x22, 0x9a, 0x40, 0x07, 0x82, 0x43, 0x90, 0x6b, 0x72, 0xc3, 0x60, 0x48, 0xf5, 0x9a, 0x4d, 0xf0,
	0x4d, 0x6c, 0x93, 0x6b, 0x76, 0xb4, 0xcd, 0x8d, 0x24, 0xb5, 0xfa, 0x0d, 0x04, 0x3f, 0xa7, 0xdf,
	0x43, 0x7a, 0x69, 0xeb, 0xd2, 0x16, 0xf7, 0x26, 0xdc, 0xdd, 0xff, 0xf9, 0xff, 0xee, 0xee, 0x7f,
	0x79, 0xa0, 0x31, 0x1c, 0xff, 0xcc, 0x19, 0x8f, 0xc6, 0x66, 0x28, 0x52, 0x66, 0xb2, 0x34, 0x15,
	0x69, 0x66, 0xdc, 0xa6, 0x22, 0x17, 0xe8, 0x70, 0xa9, 0x19, 0x73, 0xad, 0x71, 0xb6, 0x56, 0xfa,
	0x83, 0x85, 0xd3, 0x9c, 0x8b, 0xa4, 0xa8, 0x6e, 0x3c, 0x2d, 0xcb, 0x3c, 0x62, 0x49, 0xce, 0x87,
	0x9c, 0xa5, 0x85, 0xae, 0xff, 0x51, 0xe0, 0xc8, 0x12, 0x49, 0xde, 0xe7, 0x09, 0x4b, 0xc9, 0x7c,
	0x1f, 0x84, 0x40, 0x0d, 0x45, 0xc4, 0x34, 0xa5, 0xa9, 0xb4, 0x1e, 0x52, 0x39, 0x46, 0x1a, 0x3c,
	0x98, 0xb0, 0x2c, 0xeb, 0xc7, 0x4c, 0xdb, 0x95, 0xcb, 0xcb, 0x29, 0x7a, 0x03, 0xea, 0x88, 0x27,
	0x91, 0xb6, 0xd7, 0x54, 0x5a, 0x47, 0x6d, 0xdd, 0x28, 0x9d, 0xce, 0x28, 0xa3, 0x8d, 0x8f, 0x3c,
	0x89, 0xa8, 0xac, 0x47, 0xef, 0xa1, 0x22, 0x52, 0x1e, 0xf3, 0x44, 0x53, 0xa5, 0xf3, 0xc5, 0x9a,
	0x93, 0x2c, 0x2f, 0x52, 0x38, 0xe5, 0x57, 0xda, 0x17, 0x36, 0xfd, 0x15, 0xa8, 0xf3, 0x39, 0x3a,
	0x81, 0x9a, 0xd7, 0xf5, 0x02, 0x4a, 0xac, 0xee, 0x35, 0xa1, 0xb8, 0xe3, 0x92, 0xfa, 0x0e, 0xaa,
	0x41, 0xf5, 0xee, 0x82, 0xa2, 0xdb, 0x70, 0x28, 0x11, 0xb6, 0x08, 0xa7, 0x13, 0x96, 0xe4, 0xe8,
	0x1c, 0xf6, 0x65, 0xac, 0xf2, 0x9a, 0xd5, 0xf6, 0xd9, 0x7f, 0x0f, 0x4e, 0x8b, 0x5a, 0xfd, 0xb7,
	0x0a, 0xc8, 0xea, 0x87, 0x37, 0x8c, 0x7c, 0xe7, 0xe1, 0xea, 0x70, 0xe8, 0xe2, 0x4e, 0x62, 0x47,
	0xed, 0xe7, 0xeb, 0xa8, 0x0d, 0x83, 0x61, 0x89, 0x88, 0xdd, 0x9b, 0x2c, 0x85, 0xe3, 0x44, 0x44,
	0x2c, 0x58, 0x3d, 0x69, 0xc0, 0x8b, 0x98, 0xab, 0x1b, 0x5b, 0x78, 0x22, 0x62, 0xab, 0xc0, 0x9c,
	0xd5, 0x1b, 0xd3, 0x5a, 0x52, 0x16, 0x90, 0x0f, 0xc7, 0x79, 0x3f, 0x1b, 0x95, 0x99, 0xea, 0x56,
	0xa6, 0xdf, 0xcf, 0x46, 0x5b, 0x98, 0x1f, 0x76, 0x68, 0x2d, 0x2f, 0x4b, 0xe8, 0x1b, 0x3c, 0x9e,
	0x89, 0x74, 0x34, 0x1c, 0x8b, 0x59, 0x99, 0xbc, 0x2f, 0xc9, 0x2f, 0xd7, 0xc8, 0x5f, 0x16, 0xb5,
	0xdb, 0xe9, 0x27, 0xb3, 0x4d, 0x59, 0xff, 0xa5, 0x80, 0x3a, 0x0f, 0x0d, 0x3d, 0x82, 0x03, 0xc7,
	0xf3, 0x09, 0xf5, 0xb0, 0x5b, 0xdf, 0x41, 0x4f, 0x40, 0xa3, 0xa4, 0x47, 0xe8, 0x35, 0xf6, 0x9d,
	0xae, 0x17, 0x78, 0x5d, 0x3f, 0xc0, 0xd6, 0xe7, 0x2b, 0x87, 0x12, 0xbb, 0xae, 0xa0, 0x06, 0x9c,
	0xda, 0xd8, 0xc7, 0x1d, 0xdc, 0x23, 0xc1, 0xd5, 0x27, 0x1b, 0xfb, 0x24, 0xb8, 0xc4, 0x8e, 0x4b,
	0xec, 0xfa, 0xee, 0x5c, 0xc3, 0xd4, 0x77, 0x2e, 0xb1, 0xe5, 0x07, 0x36, 0x71, 0xc9, 0x3f, 0x6d,
	0x6f, 0x1b, 0x95, 0x12, 0x97, 0xe0, 0x1e, 0xb1, 0xeb, 0x6a, 0xe7, 0x00, 0x2a, 0x99, 0x98, 0xa6,
	0x21, 0xd3, 0x7b, 0x70, 0xba, 0xf9, 0xb6, 0x2e, 0xcf, 0x72, 0xf4, 0x16, 0x2a, 0x45, 0xcf, 0x6a,
	0x4a, 0x73, 0xaf, 0x55, 0x6d, 0x3f, 0xbb, 0xf7, 0x97, 0xa0, 0x0b, 0x43, 0xe7, 0xdd, 0xd7, 0x8b,
	0x98, 0xe7, 0x37, 0xd3, 0x81, 0x11, 0x8a, 0x89, 0x29, 0x6d, 0x22, 0x8d, 0x8b, 0x81, 0xb9, 0x6a,
	0xe6, 0x98, 0x25, 0xe6, 0xed, 0xe0, 0x75, 0x2c, 0xcc, 0x52, 0x7f, 0x0f, 0x2a, 0xb2, 0xab, 0xcf,
	0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0x97, 0xe9, 0x55, 0xa9, 0x41, 0x04, 0x00, 0x00,
}
