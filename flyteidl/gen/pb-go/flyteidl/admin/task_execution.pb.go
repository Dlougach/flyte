// Code generated by protoc-gen-go. DO NOT EDIT.
// source: flyteidl/admin/task_execution.proto

package admin

import (
	fmt "fmt"
	core "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/core"
	event "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/event"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_struct "github.com/golang/protobuf/ptypes/struct"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A message used to fetch a single task execution entity.
// See :ref:`ref_flyteidl.admin.TaskExecution` for more details
type TaskExecutionGetRequest struct {
	// Unique identifier for the task execution.
	// +required
	Id                   *core.TaskExecutionIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TaskExecutionGetRequest) Reset()         { *m = TaskExecutionGetRequest{} }
func (m *TaskExecutionGetRequest) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionGetRequest) ProtoMessage()    {}
func (*TaskExecutionGetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{0}
}

func (m *TaskExecutionGetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionGetRequest.Unmarshal(m, b)
}
func (m *TaskExecutionGetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionGetRequest.Marshal(b, m, deterministic)
}
func (m *TaskExecutionGetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionGetRequest.Merge(m, src)
}
func (m *TaskExecutionGetRequest) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionGetRequest.Size(m)
}
func (m *TaskExecutionGetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionGetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionGetRequest proto.InternalMessageInfo

func (m *TaskExecutionGetRequest) GetId() *core.TaskExecutionIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

// Represents a request structure to retrieve a list of task execution entities yielded by a specific node execution.
// See :ref:`ref_flyteidl.admin.TaskExecution` for more details
type TaskExecutionListRequest struct {
	// Indicates the node execution to filter by.
	// +required
	NodeExecutionId *core.NodeExecutionIdentifier `protobuf:"bytes,1,opt,name=node_execution_id,json=nodeExecutionId,proto3" json:"node_execution_id,omitempty"`
	// Indicates the number of resources to be returned.
	// +required
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query.
	// +optional
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	// Indicates a list of filters passed as string.
	// More info on constructing filters : <Link>
	// +optional
	Filters string `protobuf:"bytes,4,opt,name=filters,proto3" json:"filters,omitempty"`
	// Sort ordering for returned list.
	// +optional
	SortBy               *Sort    `protobuf:"bytes,5,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskExecutionListRequest) Reset()         { *m = TaskExecutionListRequest{} }
func (m *TaskExecutionListRequest) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionListRequest) ProtoMessage()    {}
func (*TaskExecutionListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{1}
}

func (m *TaskExecutionListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionListRequest.Unmarshal(m, b)
}
func (m *TaskExecutionListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionListRequest.Marshal(b, m, deterministic)
}
func (m *TaskExecutionListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionListRequest.Merge(m, src)
}
func (m *TaskExecutionListRequest) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionListRequest.Size(m)
}
func (m *TaskExecutionListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionListRequest proto.InternalMessageInfo

func (m *TaskExecutionListRequest) GetNodeExecutionId() *core.NodeExecutionIdentifier {
	if m != nil {
		return m.NodeExecutionId
	}
	return nil
}

func (m *TaskExecutionListRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *TaskExecutionListRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *TaskExecutionListRequest) GetFilters() string {
	if m != nil {
		return m.Filters
	}
	return ""
}

func (m *TaskExecutionListRequest) GetSortBy() *Sort {
	if m != nil {
		return m.SortBy
	}
	return nil
}

// Encapsulates all details for a single task execution entity.
// A task execution represents an instantiated task, including all inputs and additional
// metadata as well as computed results included state, outputs, and duration-based attributes.
type TaskExecution struct {
	// Unique identifier for the task execution.
	Id *core.TaskExecutionIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Path to remote data store where input blob is stored.
	InputUri string `protobuf:"bytes,2,opt,name=input_uri,json=inputUri,proto3" json:"input_uri,omitempty"`
	// Task execution details and results.
	Closure *TaskExecutionClosure `protobuf:"bytes,3,opt,name=closure,proto3" json:"closure,omitempty"`
	// Whether this task spawned nodes.
	IsParent             bool     `protobuf:"varint,4,opt,name=is_parent,json=isParent,proto3" json:"is_parent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskExecution) Reset()         { *m = TaskExecution{} }
func (m *TaskExecution) String() string { return proto.CompactTextString(m) }
func (*TaskExecution) ProtoMessage()    {}
func (*TaskExecution) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{2}
}

func (m *TaskExecution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecution.Unmarshal(m, b)
}
func (m *TaskExecution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecution.Marshal(b, m, deterministic)
}
func (m *TaskExecution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecution.Merge(m, src)
}
func (m *TaskExecution) XXX_Size() int {
	return xxx_messageInfo_TaskExecution.Size(m)
}
func (m *TaskExecution) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecution.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecution proto.InternalMessageInfo

func (m *TaskExecution) GetId() *core.TaskExecutionIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *TaskExecution) GetInputUri() string {
	if m != nil {
		return m.InputUri
	}
	return ""
}

func (m *TaskExecution) GetClosure() *TaskExecutionClosure {
	if m != nil {
		return m.Closure
	}
	return nil
}

func (m *TaskExecution) GetIsParent() bool {
	if m != nil {
		return m.IsParent
	}
	return false
}

// Response structure for a query to list of task execution entities.
// See :ref:`ref_flyteidl.admin.TaskExecution` for more details
type TaskExecutionList struct {
	TaskExecutions []*TaskExecution `protobuf:"bytes,1,rep,name=task_executions,json=taskExecutions,proto3" json:"task_executions,omitempty"`
	// In the case of multiple pages of results, the server-provided token can be used to fetch the next page
	// in a query. If there are no more results, this value will be empty.
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TaskExecutionList) Reset()         { *m = TaskExecutionList{} }
func (m *TaskExecutionList) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionList) ProtoMessage()    {}
func (*TaskExecutionList) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{3}
}

func (m *TaskExecutionList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionList.Unmarshal(m, b)
}
func (m *TaskExecutionList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionList.Marshal(b, m, deterministic)
}
func (m *TaskExecutionList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionList.Merge(m, src)
}
func (m *TaskExecutionList) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionList.Size(m)
}
func (m *TaskExecutionList) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionList.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionList proto.InternalMessageInfo

func (m *TaskExecutionList) GetTaskExecutions() []*TaskExecution {
	if m != nil {
		return m.TaskExecutions
	}
	return nil
}

func (m *TaskExecutionList) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// Container for task execution details and results.
type TaskExecutionClosure struct {
	// Types that are valid to be assigned to OutputResult:
	//	*TaskExecutionClosure_OutputUri
	//	*TaskExecutionClosure_Error
	//	*TaskExecutionClosure_OutputData
	OutputResult isTaskExecutionClosure_OutputResult `protobuf_oneof:"output_result"`
	// The last recorded phase for this task execution.
	Phase core.TaskExecution_Phase `protobuf:"varint,3,opt,name=phase,proto3,enum=flyteidl.core.TaskExecution_Phase" json:"phase,omitempty"`
	// Detailed log information output by the task execution.
	Logs []*core.TaskLog `protobuf:"bytes,4,rep,name=logs,proto3" json:"logs,omitempty"`
	// Time at which the task execution began running.
	StartedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	// The amount of time the task execution spent running.
	Duration *duration.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	// Time at which the task execution was created.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Time at which the task execution was last updated.
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// Custom data specific to the task plugin.
	CustomInfo *_struct.Struct `protobuf:"bytes,9,opt,name=custom_info,json=customInfo,proto3" json:"custom_info,omitempty"`
	// If there is an explanation for the most recent phase transition, the reason will capture it.
	Reason string `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason,omitempty"`
	// A predefined yet extensible Task type identifier.
	TaskType string `protobuf:"bytes,11,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`
	// Metadata around how a task was executed.
	Metadata *event.TaskExecutionMetadata `protobuf:"bytes,16,opt,name=metadata,proto3" json:"metadata,omitempty"`
	// The event version is used to indicate versioned changes in how data is maintained using this
	// proto message. For example, event_verison > 0 means that maps tasks logs use the
	// TaskExecutionMetadata ExternalResourceInfo fields for each subtask rather than the TaskLog
	// in this message.
	EventVersion int32 `protobuf:"varint,17,opt,name=event_version,json=eventVersion,proto3" json:"event_version,omitempty"`
	// A time-series of the phase transition or update explanations. This, when compared to storing a singular reason
	// as previously done, is much more valuable in visualizing and understanding historical evaluations.
	Reasons              []*Reason `protobuf:"bytes,18,rep,name=reasons,proto3" json:"reasons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TaskExecutionClosure) Reset()         { *m = TaskExecutionClosure{} }
func (m *TaskExecutionClosure) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionClosure) ProtoMessage()    {}
func (*TaskExecutionClosure) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{4}
}

func (m *TaskExecutionClosure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionClosure.Unmarshal(m, b)
}
func (m *TaskExecutionClosure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionClosure.Marshal(b, m, deterministic)
}
func (m *TaskExecutionClosure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionClosure.Merge(m, src)
}
func (m *TaskExecutionClosure) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionClosure.Size(m)
}
func (m *TaskExecutionClosure) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionClosure.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionClosure proto.InternalMessageInfo

type isTaskExecutionClosure_OutputResult interface {
	isTaskExecutionClosure_OutputResult()
}

type TaskExecutionClosure_OutputUri struct {
	OutputUri string `protobuf:"bytes,1,opt,name=output_uri,json=outputUri,proto3,oneof"`
}

type TaskExecutionClosure_Error struct {
	Error *core.ExecutionError `protobuf:"bytes,2,opt,name=error,proto3,oneof"`
}

type TaskExecutionClosure_OutputData struct {
	OutputData *core.LiteralMap `protobuf:"bytes,12,opt,name=output_data,json=outputData,proto3,oneof"`
}

func (*TaskExecutionClosure_OutputUri) isTaskExecutionClosure_OutputResult() {}

func (*TaskExecutionClosure_Error) isTaskExecutionClosure_OutputResult() {}

func (*TaskExecutionClosure_OutputData) isTaskExecutionClosure_OutputResult() {}

func (m *TaskExecutionClosure) GetOutputResult() isTaskExecutionClosure_OutputResult {
	if m != nil {
		return m.OutputResult
	}
	return nil
}

// Deprecated: Do not use.
func (m *TaskExecutionClosure) GetOutputUri() string {
	if x, ok := m.GetOutputResult().(*TaskExecutionClosure_OutputUri); ok {
		return x.OutputUri
	}
	return ""
}

func (m *TaskExecutionClosure) GetError() *core.ExecutionError {
	if x, ok := m.GetOutputResult().(*TaskExecutionClosure_Error); ok {
		return x.Error
	}
	return nil
}

// Deprecated: Do not use.
func (m *TaskExecutionClosure) GetOutputData() *core.LiteralMap {
	if x, ok := m.GetOutputResult().(*TaskExecutionClosure_OutputData); ok {
		return x.OutputData
	}
	return nil
}

func (m *TaskExecutionClosure) GetPhase() core.TaskExecution_Phase {
	if m != nil {
		return m.Phase
	}
	return core.TaskExecution_UNDEFINED
}

func (m *TaskExecutionClosure) GetLogs() []*core.TaskLog {
	if m != nil {
		return m.Logs
	}
	return nil
}

func (m *TaskExecutionClosure) GetStartedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *TaskExecutionClosure) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *TaskExecutionClosure) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *TaskExecutionClosure) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *TaskExecutionClosure) GetCustomInfo() *_struct.Struct {
	if m != nil {
		return m.CustomInfo
	}
	return nil
}

func (m *TaskExecutionClosure) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *TaskExecutionClosure) GetTaskType() string {
	if m != nil {
		return m.TaskType
	}
	return ""
}

func (m *TaskExecutionClosure) GetMetadata() *event.TaskExecutionMetadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *TaskExecutionClosure) GetEventVersion() int32 {
	if m != nil {
		return m.EventVersion
	}
	return 0
}

func (m *TaskExecutionClosure) GetReasons() []*Reason {
	if m != nil {
		return m.Reasons
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TaskExecutionClosure) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TaskExecutionClosure_OutputUri)(nil),
		(*TaskExecutionClosure_Error)(nil),
		(*TaskExecutionClosure_OutputData)(nil),
	}
}

// Reason is a single message annotated with a timestamp to indicate the instant the reason occurred.
type Reason struct {
	// occurred_at is the timestamp indicating the instant that this reason happened.
	OccurredAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=occurred_at,json=occurredAt,proto3" json:"occurred_at,omitempty"`
	// message is the explanation for the most recent phase transition or status update.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reason) Reset()         { *m = Reason{} }
func (m *Reason) String() string { return proto.CompactTextString(m) }
func (*Reason) ProtoMessage()    {}
func (*Reason) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{5}
}

func (m *Reason) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reason.Unmarshal(m, b)
}
func (m *Reason) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reason.Marshal(b, m, deterministic)
}
func (m *Reason) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reason.Merge(m, src)
}
func (m *Reason) XXX_Size() int {
	return xxx_messageInfo_Reason.Size(m)
}
func (m *Reason) XXX_DiscardUnknown() {
	xxx_messageInfo_Reason.DiscardUnknown(m)
}

var xxx_messageInfo_Reason proto.InternalMessageInfo

func (m *Reason) GetOccurredAt() *timestamp.Timestamp {
	if m != nil {
		return m.OccurredAt
	}
	return nil
}

func (m *Reason) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// Request structure to fetch inputs and output for a task execution.
// By default this data is not returned inline in :ref:`ref_flyteidl.admin.TaskExecutionGetRequest`
type TaskExecutionGetDataRequest struct {
	// The identifier of the task execution for which to fetch inputs and outputs.
	// +required
	Id                   *core.TaskExecutionIdentifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *TaskExecutionGetDataRequest) Reset()         { *m = TaskExecutionGetDataRequest{} }
func (m *TaskExecutionGetDataRequest) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionGetDataRequest) ProtoMessage()    {}
func (*TaskExecutionGetDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{6}
}

func (m *TaskExecutionGetDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionGetDataRequest.Unmarshal(m, b)
}
func (m *TaskExecutionGetDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionGetDataRequest.Marshal(b, m, deterministic)
}
func (m *TaskExecutionGetDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionGetDataRequest.Merge(m, src)
}
func (m *TaskExecutionGetDataRequest) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionGetDataRequest.Size(m)
}
func (m *TaskExecutionGetDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionGetDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionGetDataRequest proto.InternalMessageInfo

func (m *TaskExecutionGetDataRequest) GetId() *core.TaskExecutionIdentifier {
	if m != nil {
		return m.Id
	}
	return nil
}

// Response structure for TaskExecutionGetDataRequest which contains inputs and outputs for a task execution.
type TaskExecutionGetDataResponse struct {
	// Signed url to fetch a core.LiteralMap of task execution inputs.
	// Deprecated: Please use full_inputs instead.
	Inputs *UrlBlob `protobuf:"bytes,1,opt,name=inputs,proto3" json:"inputs,omitempty"` // Deprecated: Do not use.
	// Signed url to fetch a core.LiteralMap of task execution outputs.
	// Deprecated: Please use full_outputs instead.
	Outputs *UrlBlob `protobuf:"bytes,2,opt,name=outputs,proto3" json:"outputs,omitempty"` // Deprecated: Do not use.
	// Full_inputs will only be populated if they are under a configured size threshold.
	// Deprecated: Please use input_data instead.
	FullInputs *core.LiteralMap `protobuf:"bytes,3,opt,name=full_inputs,json=fullInputs,proto3" json:"full_inputs,omitempty"` // Deprecated: Do not use.
	// Full_outputs will only be populated if they are under a configured size threshold.
	// Deprecated: Please use output_data instead.
	FullOutputs *core.LiteralMap `protobuf:"bytes,4,opt,name=full_outputs,json=fullOutputs,proto3" json:"full_outputs,omitempty"` // Deprecated: Do not use.
	// InputData will only be populated if they are under a configured size threshold.
	InputData *core.InputData `protobuf:"bytes,6,opt,name=input_data,json=inputData,proto3" json:"input_data,omitempty"`
	// OutputData will only be populated if they are under a configured size threshold.
	OutputData *core.OutputData `protobuf:"bytes,7,opt,name=output_data,json=outputData,proto3" json:"output_data,omitempty"`
	// flyte tiny url to fetch a core.LiteralMap of task execution's IO
	// Deck will be empty for task
	FlyteUrls            *FlyteURLs `protobuf:"bytes,5,opt,name=flyte_urls,json=flyteUrls,proto3" json:"flyte_urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TaskExecutionGetDataResponse) Reset()         { *m = TaskExecutionGetDataResponse{} }
func (m *TaskExecutionGetDataResponse) String() string { return proto.CompactTextString(m) }
func (*TaskExecutionGetDataResponse) ProtoMessage()    {}
func (*TaskExecutionGetDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cde4c3aa101642e, []int{7}
}

func (m *TaskExecutionGetDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TaskExecutionGetDataResponse.Unmarshal(m, b)
}
func (m *TaskExecutionGetDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TaskExecutionGetDataResponse.Marshal(b, m, deterministic)
}
func (m *TaskExecutionGetDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TaskExecutionGetDataResponse.Merge(m, src)
}
func (m *TaskExecutionGetDataResponse) XXX_Size() int {
	return xxx_messageInfo_TaskExecutionGetDataResponse.Size(m)
}
func (m *TaskExecutionGetDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TaskExecutionGetDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TaskExecutionGetDataResponse proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *TaskExecutionGetDataResponse) GetInputs() *UrlBlob {
	if m != nil {
		return m.Inputs
	}
	return nil
}

// Deprecated: Do not use.
func (m *TaskExecutionGetDataResponse) GetOutputs() *UrlBlob {
	if m != nil {
		return m.Outputs
	}
	return nil
}

// Deprecated: Do not use.
func (m *TaskExecutionGetDataResponse) GetFullInputs() *core.LiteralMap {
	if m != nil {
		return m.FullInputs
	}
	return nil
}

// Deprecated: Do not use.
func (m *TaskExecutionGetDataResponse) GetFullOutputs() *core.LiteralMap {
	if m != nil {
		return m.FullOutputs
	}
	return nil
}

func (m *TaskExecutionGetDataResponse) GetInputData() *core.InputData {
	if m != nil {
		return m.InputData
	}
	return nil
}

func (m *TaskExecutionGetDataResponse) GetOutputData() *core.OutputData {
	if m != nil {
		return m.OutputData
	}
	return nil
}

func (m *TaskExecutionGetDataResponse) GetFlyteUrls() *FlyteURLs {
	if m != nil {
		return m.FlyteUrls
	}
	return nil
}

func init() {
	proto.RegisterType((*TaskExecutionGetRequest)(nil), "flyteidl.admin.TaskExecutionGetRequest")
	proto.RegisterType((*TaskExecutionListRequest)(nil), "flyteidl.admin.TaskExecutionListRequest")
	proto.RegisterType((*TaskExecution)(nil), "flyteidl.admin.TaskExecution")
	proto.RegisterType((*TaskExecutionList)(nil), "flyteidl.admin.TaskExecutionList")
	proto.RegisterType((*TaskExecutionClosure)(nil), "flyteidl.admin.TaskExecutionClosure")
	proto.RegisterType((*Reason)(nil), "flyteidl.admin.Reason")
	proto.RegisterType((*TaskExecutionGetDataRequest)(nil), "flyteidl.admin.TaskExecutionGetDataRequest")
	proto.RegisterType((*TaskExecutionGetDataResponse)(nil), "flyteidl.admin.TaskExecutionGetDataResponse")
}

func init() {
	proto.RegisterFile("flyteidl/admin/task_execution.proto", fileDescriptor_8cde4c3aa101642e)
}

var fileDescriptor_8cde4c3aa101642e = []byte{
	// 961 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x56, 0xdb, 0x6e, 0xdb, 0x46,
	0x10, 0x0d, 0xe5, 0xe8, 0x36, 0xf2, 0xa5, 0x5e, 0x18, 0x31, 0x23, 0x3b, 0xad, 0x20, 0xb7, 0x85,
	0x50, 0x20, 0x54, 0xe1, 0xc0, 0x6d, 0xda, 0xa0, 0x41, 0xa4, 0x26, 0x69, 0x0c, 0x38, 0x4d, 0xba,
	0xb1, 0xfa, 0xd0, 0x17, 0x82, 0x22, 0x57, 0xca, 0xc2, 0x24, 0x97, 0xd9, 0x5d, 0x06, 0xd5, 0xbf,
	0xf4, 0x4f, 0xfa, 0xd4, 0x6f, 0xe9, 0x8f, 0x14, 0x7b, 0x21, 0x6d, 0x32, 0xaa, 0x1d, 0xb4, 0x2f,
	0x82, 0x66, 0xe7, 0x9c, 0x99, 0xdd, 0x33, 0x17, 0x10, 0x8e, 0x16, 0xf1, 0x4a, 0x12, 0x1a, 0xc5,
	0xe3, 0x20, 0x4a, 0x68, 0x3a, 0x96, 0x81, 0xb8, 0xf0, 0xc9, 0xef, 0x24, 0xcc, 0x25, 0x65, 0xa9,
	0x97, 0x71, 0x26, 0x19, 0xda, 0x2e, 0x40, 0x9e, 0x06, 0xf5, 0x0f, 0x6a, 0xa4, 0x90, 0x25, 0x49,
	0x01, 0xee, 0xdf, 0x2b, 0x9d, 0x21, 0xe3, 0x64, 0x5c, 0x8b, 0xd5, 0xff, 0xb4, 0xea, 0xa6, 0x11,
	0x49, 0x25, 0x5d, 0x50, 0xc2, 0xad, 0xff, 0xb0, 0xea, 0x8f, 0xa9, 0x24, 0x3c, 0x88, 0x85, 0xf5,
	0xf6, 0x4b, 0x2f, 0x79, 0x4f, 0x52, 0x69, 0x7e, 0xad, 0xef, 0xb3, 0x25, 0x63, 0xcb, 0x98, 0x8c,
	0xb5, 0x35, 0xcf, 0x17, 0x63, 0x49, 0x13, 0x22, 0x64, 0x90, 0x64, 0x45, 0xea, 0x3a, 0x20, 0xca,
	0x79, 0x70, 0xe5, 0x6a, 0x87, 0x75, 0xbf, 0x90, 0x3c, 0x0f, 0x6d, 0xf8, 0xe1, 0x2f, 0xb0, 0x7f,
	0x1e, 0x88, 0x8b, 0x67, 0xc5, 0x7b, 0x7e, 0x22, 0x12, 0x93, 0x77, 0x39, 0x11, 0x12, 0x7d, 0x03,
	0x0d, 0x1a, 0xb9, 0xce, 0xc0, 0x19, 0xf5, 0x8e, 0xbf, 0xf4, 0x4a, 0xb1, 0xd4, 0x03, 0xbc, 0x0a,
	0xe7, 0xb4, 0x7c, 0x2d, 0x6e, 0xd0, 0x68, 0xf8, 0xb7, 0x03, 0x6e, 0xc5, 0x7f, 0x46, 0x45, 0x19,
	0x14, 0xc3, 0x6e, 0xca, 0x22, 0x72, 0x59, 0x0c, 0xff, 0x5f, 0x73, 0xfc, 0xcc, 0x22, 0xb2, 0x2e,
	0xc7, 0x4e, 0x5a, 0x75, 0xa0, 0x3d, 0x68, 0xc6, 0x34, 0xa1, 0xd2, 0x6d, 0x0c, 0x9c, 0xd1, 0x16,
	0x36, 0x86, 0x3a, 0x95, 0xec, 0x82, 0xa4, 0xee, 0xc6, 0xc0, 0x19, 0x75, 0xb1, 0x31, 0x90, 0x0b,
	0xed, 0x05, 0x8d, 0x25, 0xe1, 0xc2, 0xbd, 0xad, 0xcf, 0x0b, 0x13, 0xdd, 0x87, 0xb6, 0x60, 0x5c,
	0xfa, 0xf3, 0x95, 0xdb, 0xd4, 0xf7, 0xd9, 0xf3, 0xaa, 0x0d, 0xe2, 0xbd, 0x61, 0x5c, 0xe2, 0x96,
	0x02, 0x4d, 0x57, 0xc3, 0xbf, 0x1c, 0xd8, 0xaa, 0xbc, 0xf2, 0xbf, 0xea, 0x85, 0x0e, 0xa0, 0x4b,
	0xd3, 0x2c, 0x97, 0x7e, 0xce, 0xa9, 0x7e, 0x42, 0x17, 0x77, 0xf4, 0xc1, 0x8c, 0x53, 0xf4, 0x18,
	0xda, 0x61, 0xcc, 0x44, 0xce, 0x89, 0x7e, 0x47, 0xef, 0xf8, 0xf3, 0xfa, 0xad, 0x2a, 0xa1, 0x7f,
	0x34, 0x58, 0x5c, 0x90, 0x74, 0x70, 0xe1, 0x67, 0x01, 0x27, 0xa9, 0xd4, 0x2f, 0xee, 0xe0, 0x0e,
	0x15, 0xaf, 0xb5, 0x3d, 0x7c, 0x07, 0xbb, 0x1f, 0x14, 0x0a, 0x3d, 0x87, 0x9d, 0xea, 0xb8, 0x08,
	0xd7, 0x19, 0x6c, 0x8c, 0x7a, 0xc7, 0xf7, 0xae, 0xcd, 0x8c, 0xb7, 0xe5, 0x55, 0x53, 0x5c, 0xea,
	0xdf, 0xb8, 0xa2, 0xff, 0xf0, 0x8f, 0x16, 0xec, 0xad, 0xbb, 0x31, 0x3a, 0x02, 0x60, 0xb9, 0x2c,
	0x64, 0x50, 0x2a, 0x76, 0xa7, 0x0d, 0xd7, 0x79, 0x71, 0x0b, 0x77, 0xcd, 0xb9, 0x52, 0xe3, 0x04,
	0x9a, 0x84, 0x73, 0xc6, 0x75, 0xcc, 0xca, 0x8d, 0xb4, 0xca, 0x65, 0xd0, 0x67, 0x0a, 0xf4, 0xe2,
	0x16, 0x36, 0x68, 0xf4, 0x04, 0x7a, 0x36, 0x76, 0x14, 0xc8, 0xc0, 0xdd, 0xd4, 0xe4, 0xbb, 0x35,
	0xf2, 0x99, 0x99, 0xc9, 0x97, 0x41, 0x66, 0xf3, 0xda, 0xfb, 0x3c, 0x0d, 0x64, 0x80, 0x1e, 0x42,
	0x33, 0x7b, 0x1b, 0x08, 0x53, 0x84, 0xed, 0xe3, 0xe1, 0x75, 0xe5, 0xf5, 0x5e, 0x2b, 0x24, 0x36,
	0x04, 0xf4, 0x15, 0xdc, 0x8e, 0xd9, 0x52, 0x75, 0x9b, 0xd2, 0xf0, 0xce, 0x1a, 0xe2, 0x19, 0x5b,
	0x62, 0x8d, 0x41, 0xdf, 0x01, 0x08, 0x19, 0x70, 0x49, 0x22, 0x3f, 0x90, 0xb6, 0x0b, 0xfb, 0x9e,
	0x99, 0x5f, 0xaf, 0x98, 0x5f, 0xef, 0xbc, 0x58, 0x00, 0xb8, 0x6b, 0xd1, 0x13, 0x89, 0x4e, 0xa0,
	0x53, 0xcc, 0xbd, 0xdb, 0xb2, 0xef, 0xab, 0x13, 0x9f, 0x5a, 0x00, 0x2e, 0xa1, 0x2a, 0x63, 0xc8,
	0x49, 0x60, 0x33, 0xb6, 0x6f, 0xce, 0x68, 0xd1, 0x13, 0xa9, 0xa8, 0x79, 0x16, 0x15, 0xd4, 0xce,
	0xcd, 0x54, 0x8b, 0x9e, 0x48, 0xf4, 0x10, 0x7a, 0x61, 0x2e, 0x24, 0x4b, 0x7c, 0x9a, 0x2e, 0x98,
	0xdb, 0xd5, 0xdc, 0xfd, 0x0f, 0xb8, 0x6f, 0xf4, 0xa2, 0xc2, 0x60, 0xb0, 0xa7, 0xe9, 0x82, 0xa1,
	0x3b, 0xd0, 0xe2, 0x24, 0x10, 0x2c, 0x75, 0x41, 0x77, 0x95, 0xb5, 0x54, 0x9b, 0xeb, 0xa6, 0x95,
	0xab, 0x8c, 0xb8, 0x3d, 0x33, 0x43, 0xea, 0xe0, 0x7c, 0x95, 0x11, 0x34, 0x81, 0x4e, 0x42, 0x64,
	0xa0, 0x6b, 0xff, 0x89, 0xce, 0xf5, 0xc5, 0x65, 0x19, 0xcc, 0xae, 0xad, 0x14, 0xf0, 0xa5, 0x05,
	0xe3, 0x92, 0x86, 0x8e, 0x60, 0x4b, 0x03, 0xfd, 0xf7, 0x84, 0x0b, 0xa5, 0xf1, 0xee, 0xc0, 0x19,
	0x35, 0xf1, 0xa6, 0x3e, 0xfc, 0xd5, 0x9c, 0xa1, 0xaf, 0xa1, 0x6d, 0xae, 0x23, 0x5c, 0x54, 0xaf,
	0xb6, 0x99, 0x18, 0xac, 0xdd, 0xb8, 0x80, 0x4d, 0x77, 0x60, 0xcb, 0x36, 0x26, 0x27, 0x22, 0x8f,
	0xe5, 0xd0, 0x87, 0x96, 0xc1, 0xa0, 0x47, 0xd0, 0x63, 0x61, 0x98, 0x73, 0x6e, 0xf4, 0x75, 0x6e,
	0xd4, 0x17, 0x0a, 0xf8, 0x44, 0xaa, 0x2d, 0x97, 0x10, 0x21, 0x82, 0x25, 0xb1, 0xd3, 0x57, 0x98,
	0xc3, 0x19, 0x1c, 0xd4, 0xf7, 0xbd, 0x6a, 0xf0, 0xff, 0xbb, 0xf3, 0xff, 0xdc, 0x80, 0xc3, 0xf5,
	0x71, 0x45, 0xc6, 0x52, 0x41, 0xd0, 0x03, 0x68, 0xe9, 0x9d, 0x26, 0x6c, 0xf0, 0xfd, 0xba, 0x34,
	0x33, 0x1e, 0x4f, 0x63, 0x36, 0x57, 0xb3, 0x87, 0x2d, 0x14, 0x9d, 0x40, 0xdb, 0xc8, 0x23, 0xec,
	0xc0, 0x5f, 0xcb, 0x2a, 0xb0, 0xe8, 0x31, 0xf4, 0x16, 0x79, 0x1c, 0xfb, 0x36, 0xe1, 0xc6, 0x47,
	0x8c, 0x3b, 0x06, 0xc5, 0x38, 0x35, 0x69, 0x9f, 0xc0, 0xa6, 0xe6, 0x17, 0xb9, 0x6f, 0x7f, 0x4c,
	0x00, 0x9d, 0xf2, 0x95, 0xbd, 0xc1, 0xb7, 0x00, 0x66, 0xa5, 0xeb, 0x9e, 0x33, 0xf3, 0xe8, 0xd6,
	0xf8, 0x3a, 0x99, 0xd6, 0xc8, 0xac, 0x7f, 0xbd, 0x67, 0xbe, 0xaf, 0x6e, 0xaa, 0xf6, 0xda, 0xcc,
	0xaf, 0xca, 0xbd, 0x54, 0xdb, 0x51, 0xa0, 0x71, 0x7e, 0xce, 0x63, 0x61, 0xb7, 0xc7, 0xdd, 0xba,
	0x60, 0xcf, 0x95, 0x39, 0xc3, 0x67, 0x02, 0x77, 0xb5, 0x67, 0xc6, 0x63, 0x31, 0xfd, 0xe1, 0xb7,
	0x47, 0x4b, 0x2a, 0xdf, 0xe6, 0x73, 0x2f, 0x64, 0xc9, 0x58, 0x9f, 0x33, 0xbe, 0x34, 0x7f, 0xc6,
	0xe5, 0xb7, 0xc9, 0x92, 0xa4, 0xe3, 0x6c, 0x7e, 0x7f, 0xc9, 0xc6, 0xd5, 0x0f, 0xa5, 0x79, 0x4b,
	0x77, 0xe3, 0x83, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa2, 0xae, 0xc4, 0xcf, 0x76, 0x09, 0x00,
	0x00,
}
