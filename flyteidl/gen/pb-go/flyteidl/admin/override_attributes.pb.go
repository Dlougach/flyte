// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: flyteidl/admin/override_attributes.proto

package admin

import (
	core "github.com/flyteorg/flyte/flyteidl/gen/pb-go/flyteidl/core"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProjectID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Domain  string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Org     string `protobuf:"bytes,3,opt,name=org,proto3" json:"org,omitempty"`
}

func (x *ProjectID) Reset() {
	*x = ProjectID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectID) ProtoMessage() {}

func (x *ProjectID) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectID.ProtoReflect.Descriptor instead.
func (*ProjectID) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{0}
}

func (x *ProjectID) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *ProjectID) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ProjectID) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskResourceAttributes    *TaskResourceAttributes    `protobuf:"bytes,1,opt,name=task_resource_attributes,json=taskResourceAttributes,proto3" json:"task_resource_attributes,omitempty"`
	ClusterResourceAttributes *ClusterResourceAttributes `protobuf:"bytes,2,opt,name=cluster_resource_attributes,json=clusterResourceAttributes,proto3" json:"cluster_resource_attributes,omitempty"`
	ExecutionQueueAttributes  *ExecutionQueueAttributes  `protobuf:"bytes,3,opt,name=execution_queue_attributes,json=executionQueueAttributes,proto3" json:"execution_queue_attributes,omitempty"`
	ExecutionClusterLabel     *ExecutionClusterLabel     `protobuf:"bytes,4,opt,name=execution_cluster_label,json=executionClusterLabel,proto3" json:"execution_cluster_label,omitempty"`
	QualityOfService          *core.QualityOfService     `protobuf:"bytes,5,opt,name=quality_of_service,json=qualityOfService,proto3" json:"quality_of_service,omitempty"`
	PluginOverrides           *PluginOverrides           `protobuf:"bytes,6,opt,name=plugin_overrides,json=pluginOverrides,proto3" json:"plugin_overrides,omitempty"`
	WorkflowExecutionConfig   *WorkflowExecutionConfig   `protobuf:"bytes,7,opt,name=workflow_execution_config,json=workflowExecutionConfig,proto3" json:"workflow_execution_config,omitempty"`
	ClusterAssignment         *ClusterAssignment         `protobuf:"bytes,8,opt,name=cluster_assignment,json=clusterAssignment,proto3" json:"cluster_assignment,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{1}
}

func (x *Attributes) GetTaskResourceAttributes() *TaskResourceAttributes {
	if x != nil {
		return x.TaskResourceAttributes
	}
	return nil
}

func (x *Attributes) GetClusterResourceAttributes() *ClusterResourceAttributes {
	if x != nil {
		return x.ClusterResourceAttributes
	}
	return nil
}

func (x *Attributes) GetExecutionQueueAttributes() *ExecutionQueueAttributes {
	if x != nil {
		return x.ExecutionQueueAttributes
	}
	return nil
}

func (x *Attributes) GetExecutionClusterLabel() *ExecutionClusterLabel {
	if x != nil {
		return x.ExecutionClusterLabel
	}
	return nil
}

func (x *Attributes) GetQualityOfService() *core.QualityOfService {
	if x != nil {
		return x.QualityOfService
	}
	return nil
}

func (x *Attributes) GetPluginOverrides() *PluginOverrides {
	if x != nil {
		return x.PluginOverrides
	}
	return nil
}

func (x *Attributes) GetWorkflowExecutionConfig() *WorkflowExecutionConfig {
	if x != nil {
		return x.WorkflowExecutionConfig
	}
	return nil
}

func (x *Attributes) GetClusterAssignment() *ClusterAssignment {
	if x != nil {
		return x.ClusterAssignment
	}
	return nil
}

type OverrideAttributesGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ProjectID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *OverrideAttributesGetRequest) Reset() {
	*x = OverrideAttributesGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideAttributesGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideAttributesGetRequest) ProtoMessage() {}

func (x *OverrideAttributesGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideAttributesGetRequest.ProtoReflect.Descriptor instead.
func (*OverrideAttributesGetRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{2}
}

func (x *OverrideAttributesGetRequest) GetId() *ProjectID {
	if x != nil {
		return x.Id
	}
	return nil
}

type OverrideAttributesGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *ProjectID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version string     `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Everything set at the project-domain level
	ProjectDomainAttributes *Attributes `protobuf:"bytes,3,opt,name=project_domain_attributes,json=projectDomainAttributes,proto3" json:"project_domain_attributes,omitempty"`
	// Everything set at the project level
	ProjectAttributes *Attributes `protobuf:"bytes,4,opt,name=project_attributes,json=projectAttributes,proto3" json:"project_attributes,omitempty"`
	// Everything set at the global application level
	GlobalAttributes *Attributes `protobuf:"bytes,5,opt,name=global_attributes,json=globalAttributes,proto3" json:"global_attributes,omitempty"`
}

func (x *OverrideAttributesGetResponse) Reset() {
	*x = OverrideAttributesGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideAttributesGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideAttributesGetResponse) ProtoMessage() {}

func (x *OverrideAttributesGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideAttributesGetResponse.ProtoReflect.Descriptor instead.
func (*OverrideAttributesGetResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{3}
}

func (x *OverrideAttributesGetResponse) GetId() *ProjectID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *OverrideAttributesGetResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *OverrideAttributesGetResponse) GetProjectDomainAttributes() *Attributes {
	if x != nil {
		return x.ProjectDomainAttributes
	}
	return nil
}

func (x *OverrideAttributesGetResponse) GetProjectAttributes() *Attributes {
	if x != nil {
		return x.ProjectAttributes
	}
	return nil
}

func (x *OverrideAttributesGetResponse) GetGlobalAttributes() *Attributes {
	if x != nil {
		return x.GlobalAttributes
	}
	return nil
}

type OverrideAttributesUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *ProjectID `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Everything set at the project-domain level
	Attribute *Attributes `protobuf:"bytes,2,opt,name=attribute,proto3" json:"attribute,omitempty"`
}

func (x *OverrideAttributesUpdateRequest) Reset() {
	*x = OverrideAttributesUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideAttributesUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideAttributesUpdateRequest) ProtoMessage() {}

func (x *OverrideAttributesUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideAttributesUpdateRequest.ProtoReflect.Descriptor instead.
func (*OverrideAttributesUpdateRequest) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{4}
}

func (x *OverrideAttributesUpdateRequest) GetId() *ProjectID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *OverrideAttributesUpdateRequest) GetAttribute() *Attributes {
	if x != nil {
		return x.Attribute
	}
	return nil
}

type OverrideAttributesUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OverrideAttributesUpdateResponse) Reset() {
	*x = OverrideAttributesUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OverrideAttributesUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OverrideAttributesUpdateResponse) ProtoMessage() {}

func (x *OverrideAttributesUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OverrideAttributesUpdateResponse.ProtoReflect.Descriptor instead.
func (*OverrideAttributesUpdateResponse) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{5}
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      string                  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	OrgDocuments map[string]*OrgDocument `protobuf:"bytes,2,rep,name=org_documents,json=orgDocuments,proto3" json:"org_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{6}
}

func (x *Document) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Document) GetOrgDocuments() map[string]*OrgDocument {
	if x != nil {
		return x.OrgDocuments
	}
	return nil
}

type OrgDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDocuments map[string]*ProjectDocument `protobuf:"bytes,1,rep,name=project_documents,json=projectDocuments,proto3" json:"project_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *OrgDocument) Reset() {
	*x = OrgDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrgDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrgDocument) ProtoMessage() {}

func (x *OrgDocument) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrgDocument.ProtoReflect.Descriptor instead.
func (*OrgDocument) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{7}
}

func (x *OrgDocument) GetProjectDocuments() map[string]*ProjectDocument {
	if x != nil {
		return x.ProjectDocuments
	}
	return nil
}

type ProjectDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectDomainDocuments map[string]*ProjectDomainDocument `protobuf:"bytes,1,rep,name=project_domain_documents,json=projectDomainDocuments,proto3" json:"project_domain_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProjectDocument) Reset() {
	*x = ProjectDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDocument) ProtoMessage() {}

func (x *ProjectDocument) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDocument.ProtoReflect.Descriptor instead.
func (*ProjectDocument) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectDocument) GetProjectDomainDocuments() map[string]*ProjectDomainDocument {
	if x != nil {
		return x.ProjectDomainDocuments
	}
	return nil
}

type ProjectDomainDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkflowDocuments map[string]*WorkflowDocument `protobuf:"bytes,1,rep,name=workflow_documents,json=workflowDocuments,proto3" json:"workflow_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProjectDomainDocument) Reset() {
	*x = ProjectDomainDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProjectDomainDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectDomainDocument) ProtoMessage() {}

func (x *ProjectDomainDocument) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectDomainDocument.ProtoReflect.Descriptor instead.
func (*ProjectDomainDocument) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectDomainDocument) GetWorkflowDocuments() map[string]*WorkflowDocument {
	if x != nil {
		return x.WorkflowDocuments
	}
	return nil
}

type WorkflowDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LaunchPlanDocuments map[string]*LaunchPlanDocument `protobuf:"bytes,1,rep,name=launch_plan_documents,json=launchPlanDocuments,proto3" json:"launch_plan_documents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WorkflowDocument) Reset() {
	*x = WorkflowDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowDocument) ProtoMessage() {}

func (x *WorkflowDocument) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowDocument.ProtoReflect.Descriptor instead.
func (*WorkflowDocument) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{10}
}

func (x *WorkflowDocument) GetLaunchPlanDocuments() map[string]*LaunchPlanDocument {
	if x != nil {
		return x.LaunchPlanDocuments
	}
	return nil
}

type LaunchPlanDocument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attributes *Attributes `protobuf:"bytes,1,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *LaunchPlanDocument) Reset() {
	*x = LaunchPlanDocument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LaunchPlanDocument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LaunchPlanDocument) ProtoMessage() {}

func (x *LaunchPlanDocument) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LaunchPlanDocument.ProtoReflect.Descriptor instead.
func (*LaunchPlanDocument) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{11}
}

func (x *LaunchPlanDocument) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type DocumentID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Org        string `protobuf:"bytes,1,opt,name=org,proto3" json:"org,omitempty"`
	Domain     string `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Project    string `protobuf:"bytes,3,opt,name=project,proto3" json:"project,omitempty"`
	Workflow   string `protobuf:"bytes,4,opt,name=workflow,proto3" json:"workflow,omitempty"`
	LaunchPlan string `protobuf:"bytes,5,opt,name=launch_plan,json=launchPlan,proto3" json:"launch_plan,omitempty"`
}

func (x *DocumentID) Reset() {
	*x = DocumentID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentID) ProtoMessage() {}

func (x *DocumentID) ProtoReflect() protoreflect.Message {
	mi := &file_flyteidl_admin_override_attributes_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentID.ProtoReflect.Descriptor instead.
func (*DocumentID) Descriptor() ([]byte, []int) {
	return file_flyteidl_admin_override_attributes_proto_rawDescGZIP(), []int{12}
}

func (x *DocumentID) GetOrg() string {
	if x != nil {
		return x.Org
	}
	return ""
}

func (x *DocumentID) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *DocumentID) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *DocumentID) GetWorkflow() string {
	if x != nil {
		return x.Workflow
	}
	return ""
}

func (x *DocumentID) GetLaunchPlan() string {
	if x != nil {
		return x.LaunchPlan
	}
	return ""
}

var File_flyteidl_admin_override_attributes_proto protoreflect.FileDescriptor

var file_flyteidl_admin_override_attributes_proto_rawDesc = []byte{
	0x0a, 0x28, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x27, 0x66, 0x6c, 0x79, 0x74,
	0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x27, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4f, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x22, 0xf2, 0x05, 0x0a,
	0x0a, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x60, 0x0a, 0x18, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x16, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x69, 0x0a,
	0x1b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x19, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x1a, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x18, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x12, 0x5d, 0x0a, 0x17, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x75, 0x73,
	0x74, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x15, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12,
	0x4d, 0x0a, 0x12, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6f, 0x66, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10, 0x71, 0x75,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x66, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a,
	0x0a, 0x10, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x52, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x73, 0x12, 0x63, 0x0a, 0x19, 0x77, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x17, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x50, 0x0a, 0x12, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x11,
	0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x22, 0x49, 0x0a, 0x1c, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x41, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22, 0xd0, 0x02, 0x0a,
	0x1d, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x19, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64,
	0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x73, 0x52, 0x17, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x12, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x10, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22,
	0x86, 0x01, 0x0a, 0x1f, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38,
	0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x09, 0x61,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0x22, 0x0a, 0x20, 0x4f, 0x76, 0x65, 0x72,
	0x72, 0x69, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd3, 0x01, 0x0a,
	0x08, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x0d, 0x6f, 0x72, 0x67, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x5c, 0x0a, 0x11, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f, 0x72, 0x67, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xd3, 0x01, 0x0a, 0x0b, 0x4f, 0x72, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e,
	0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4f,
	0x72, 0x67, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x64, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x75, 0x0a, 0x18,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3b,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x16, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x1a, 0x70, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xec, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x6b, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x66, 0x0a, 0x16,
	0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69,
	0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xed, 0x01, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x6d, 0x0a, 0x15, 0x6c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65,
	0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c,
	0x6f, 0x77, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63,
	0x68, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x13, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x44,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x6a, 0x0a, 0x18, 0x4c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6c, 0x61,
	0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x50, 0x0a, 0x12, 0x4c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x50, 0x6c,
	0x61, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x61, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x8d, 0x01, 0x0a, 0x0a, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x72, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6f, 0x72, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x6f, 0x72,
	0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f,
	0x70, 0x6c, 0x61, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x75, 0x6e,
	0x63, 0x68, 0x50, 0x6c, 0x61, 0x6e, 0x42, 0xc3, 0x01, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x2e, 0x66,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x17, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x6f, 0x72, 0x67, 0x2f, 0x66, 0x6c,
	0x79, 0x74, 0x65, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x66, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x46, 0x41, 0x58, 0xaa, 0x02, 0x0e, 0x46, 0x6c,
	0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xca, 0x02, 0x0e, 0x46,
	0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xe2, 0x02, 0x1a,
	0x46, 0x6c, 0x79, 0x74, 0x65, 0x69, 0x64, 0x6c, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0f, 0x46, 0x6c, 0x79,
	0x74, 0x65, 0x69, 0x64, 0x6c, 0x3a, 0x3a, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flyteidl_admin_override_attributes_proto_rawDescOnce sync.Once
	file_flyteidl_admin_override_attributes_proto_rawDescData = file_flyteidl_admin_override_attributes_proto_rawDesc
)

func file_flyteidl_admin_override_attributes_proto_rawDescGZIP() []byte {
	file_flyteidl_admin_override_attributes_proto_rawDescOnce.Do(func() {
		file_flyteidl_admin_override_attributes_proto_rawDescData = protoimpl.X.CompressGZIP(file_flyteidl_admin_override_attributes_proto_rawDescData)
	})
	return file_flyteidl_admin_override_attributes_proto_rawDescData
}

var file_flyteidl_admin_override_attributes_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_flyteidl_admin_override_attributes_proto_goTypes = []interface{}{
	(*ProjectID)(nil),                        // 0: flyteidl.admin.projectID
	(*Attributes)(nil),                       // 1: flyteidl.admin.Attributes
	(*OverrideAttributesGetRequest)(nil),     // 2: flyteidl.admin.OverrideAttributesGetRequest
	(*OverrideAttributesGetResponse)(nil),    // 3: flyteidl.admin.OverrideAttributesGetResponse
	(*OverrideAttributesUpdateRequest)(nil),  // 4: flyteidl.admin.OverrideAttributesUpdateRequest
	(*OverrideAttributesUpdateResponse)(nil), // 5: flyteidl.admin.OverrideAttributesUpdateResponse
	(*Document)(nil),                         // 6: flyteidl.admin.Document
	(*OrgDocument)(nil),                      // 7: flyteidl.admin.OrgDocument
	(*ProjectDocument)(nil),                  // 8: flyteidl.admin.ProjectDocument
	(*ProjectDomainDocument)(nil),            // 9: flyteidl.admin.ProjectDomainDocument
	(*WorkflowDocument)(nil),                 // 10: flyteidl.admin.WorkflowDocument
	(*LaunchPlanDocument)(nil),               // 11: flyteidl.admin.LaunchPlanDocument
	(*DocumentID)(nil),                       // 12: flyteidl.admin.DocumentID
	nil,                                      // 13: flyteidl.admin.Document.OrgDocumentsEntry
	nil,                                      // 14: flyteidl.admin.OrgDocument.ProjectDocumentsEntry
	nil,                                      // 15: flyteidl.admin.ProjectDocument.ProjectDomainDocumentsEntry
	nil,                                      // 16: flyteidl.admin.ProjectDomainDocument.WorkflowDocumentsEntry
	nil,                                      // 17: flyteidl.admin.WorkflowDocument.LaunchPlanDocumentsEntry
	(*TaskResourceAttributes)(nil),           // 18: flyteidl.admin.TaskResourceAttributes
	(*ClusterResourceAttributes)(nil),        // 19: flyteidl.admin.ClusterResourceAttributes
	(*ExecutionQueueAttributes)(nil),         // 20: flyteidl.admin.ExecutionQueueAttributes
	(*ExecutionClusterLabel)(nil),            // 21: flyteidl.admin.ExecutionClusterLabel
	(*core.QualityOfService)(nil),            // 22: flyteidl.core.QualityOfService
	(*PluginOverrides)(nil),                  // 23: flyteidl.admin.PluginOverrides
	(*WorkflowExecutionConfig)(nil),          // 24: flyteidl.admin.WorkflowExecutionConfig
	(*ClusterAssignment)(nil),                // 25: flyteidl.admin.ClusterAssignment
}
var file_flyteidl_admin_override_attributes_proto_depIdxs = []int32{
	18, // 0: flyteidl.admin.Attributes.task_resource_attributes:type_name -> flyteidl.admin.TaskResourceAttributes
	19, // 1: flyteidl.admin.Attributes.cluster_resource_attributes:type_name -> flyteidl.admin.ClusterResourceAttributes
	20, // 2: flyteidl.admin.Attributes.execution_queue_attributes:type_name -> flyteidl.admin.ExecutionQueueAttributes
	21, // 3: flyteidl.admin.Attributes.execution_cluster_label:type_name -> flyteidl.admin.ExecutionClusterLabel
	22, // 4: flyteidl.admin.Attributes.quality_of_service:type_name -> flyteidl.core.QualityOfService
	23, // 5: flyteidl.admin.Attributes.plugin_overrides:type_name -> flyteidl.admin.PluginOverrides
	24, // 6: flyteidl.admin.Attributes.workflow_execution_config:type_name -> flyteidl.admin.WorkflowExecutionConfig
	25, // 7: flyteidl.admin.Attributes.cluster_assignment:type_name -> flyteidl.admin.ClusterAssignment
	0,  // 8: flyteidl.admin.OverrideAttributesGetRequest.id:type_name -> flyteidl.admin.projectID
	0,  // 9: flyteidl.admin.OverrideAttributesGetResponse.id:type_name -> flyteidl.admin.projectID
	1,  // 10: flyteidl.admin.OverrideAttributesGetResponse.project_domain_attributes:type_name -> flyteidl.admin.Attributes
	1,  // 11: flyteidl.admin.OverrideAttributesGetResponse.project_attributes:type_name -> flyteidl.admin.Attributes
	1,  // 12: flyteidl.admin.OverrideAttributesGetResponse.global_attributes:type_name -> flyteidl.admin.Attributes
	0,  // 13: flyteidl.admin.OverrideAttributesUpdateRequest.id:type_name -> flyteidl.admin.projectID
	1,  // 14: flyteidl.admin.OverrideAttributesUpdateRequest.attribute:type_name -> flyteidl.admin.Attributes
	13, // 15: flyteidl.admin.Document.org_documents:type_name -> flyteidl.admin.Document.OrgDocumentsEntry
	14, // 16: flyteidl.admin.OrgDocument.project_documents:type_name -> flyteidl.admin.OrgDocument.ProjectDocumentsEntry
	15, // 17: flyteidl.admin.ProjectDocument.project_domain_documents:type_name -> flyteidl.admin.ProjectDocument.ProjectDomainDocumentsEntry
	16, // 18: flyteidl.admin.ProjectDomainDocument.workflow_documents:type_name -> flyteidl.admin.ProjectDomainDocument.WorkflowDocumentsEntry
	17, // 19: flyteidl.admin.WorkflowDocument.launch_plan_documents:type_name -> flyteidl.admin.WorkflowDocument.LaunchPlanDocumentsEntry
	1,  // 20: flyteidl.admin.LaunchPlanDocument.attributes:type_name -> flyteidl.admin.Attributes
	7,  // 21: flyteidl.admin.Document.OrgDocumentsEntry.value:type_name -> flyteidl.admin.OrgDocument
	8,  // 22: flyteidl.admin.OrgDocument.ProjectDocumentsEntry.value:type_name -> flyteidl.admin.ProjectDocument
	9,  // 23: flyteidl.admin.ProjectDocument.ProjectDomainDocumentsEntry.value:type_name -> flyteidl.admin.ProjectDomainDocument
	10, // 24: flyteidl.admin.ProjectDomainDocument.WorkflowDocumentsEntry.value:type_name -> flyteidl.admin.WorkflowDocument
	11, // 25: flyteidl.admin.WorkflowDocument.LaunchPlanDocumentsEntry.value:type_name -> flyteidl.admin.LaunchPlanDocument
	26, // [26:26] is the sub-list for method output_type
	26, // [26:26] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_flyteidl_admin_override_attributes_proto_init() }
func file_flyteidl_admin_override_attributes_proto_init() {
	if File_flyteidl_admin_override_attributes_proto != nil {
		return
	}
	file_flyteidl_admin_matchable_resource_proto_init()
	file_flyteidl_admin_cluster_assignment_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_flyteidl_admin_override_attributes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideAttributesGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideAttributesGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideAttributesUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OverrideAttributesUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrgDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProjectDomainDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LaunchPlanDocument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flyteidl_admin_override_attributes_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flyteidl_admin_override_attributes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_flyteidl_admin_override_attributes_proto_goTypes,
		DependencyIndexes: file_flyteidl_admin_override_attributes_proto_depIdxs,
		MessageInfos:      file_flyteidl_admin_override_attributes_proto_msgTypes,
	}.Build()
	File_flyteidl_admin_override_attributes_proto = out.File
	file_flyteidl_admin_override_attributes_proto_rawDesc = nil
	file_flyteidl_admin_override_attributes_proto_goTypes = nil
	file_flyteidl_admin_override_attributes_proto_depIdxs = nil
}
