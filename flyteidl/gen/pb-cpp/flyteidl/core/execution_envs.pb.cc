// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flyteidl/core/execution_envs.proto

#include "flyteidl/core/execution_envs.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fstruct_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto;
namespace flyteidl {
namespace core {
class ExecutionEnvironmentAssignmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExecutionEnvironmentAssignment> _instance;
  const ::google::protobuf::Struct* environment_;
  const ::google::protobuf::Struct* environment_spec_;
} _ExecutionEnvironmentAssignment_default_instance_;
}  // namespace core
}  // namespace flyteidl
static void InitDefaultsExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::flyteidl::core::_ExecutionEnvironmentAssignment_default_instance_;
    new (ptr) ::flyteidl::core::ExecutionEnvironmentAssignment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::flyteidl::core::ExecutionEnvironmentAssignment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto}, {
      &scc_info_ListValue_google_2fprotobuf_2fstruct_2eproto.base,}};

void InitDefaults_flyteidl_2fcore_2fexecution_5fenvs_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_ExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_flyteidl_2fcore_2fexecution_5fenvs_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_flyteidl_2fcore_2fexecution_5fenvs_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, id_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, node_ids_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, type_),
  offsetof(::flyteidl::core::ExecutionEnvironmentAssignmentDefaultTypeInternal, environment_),
  offsetof(::flyteidl::core::ExecutionEnvironmentAssignmentDefaultTypeInternal, environment_spec_),
  PROTOBUF_FIELD_OFFSET(::flyteidl::core::ExecutionEnvironmentAssignment, assignment_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::flyteidl::core::ExecutionEnvironmentAssignment)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::flyteidl::core::_ExecutionEnvironmentAssignment_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_flyteidl_2fcore_2fexecution_5fenvs_2eproto = {
  {}, AddDescriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto, "flyteidl/core/execution_envs.proto", schemas,
  file_default_instances, TableStruct_flyteidl_2fcore_2fexecution_5fenvs_2eproto::offsets,
  file_level_metadata_flyteidl_2fcore_2fexecution_5fenvs_2eproto, 1, file_level_enum_descriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto, file_level_service_descriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto,
};

const char descriptor_table_protodef_flyteidl_2fcore_2fexecution_5fenvs_2eproto[] =
  "\n\"flyteidl/core/execution_envs.proto\022\rfl"
  "yteidl.core\032\034google/protobuf/struct.prot"
  "o\"\277\001\n\036ExecutionEnvironmentAssignment\022\n\n\002"
  "id\030\001 \001(\t\022\020\n\010node_ids\030\002 \003(\t\022\014\n\004type\030\003 \001(\t"
  "\022.\n\013environment\030\004 \001(\0132\027.google.protobuf."
  "StructH\000\0223\n\020environment_spec\030\005 \001(\0132\027.goo"
  "gle.protobuf.StructH\000B\014\n\nassignmentB<Z:g"
  "ithub.com/flyteorg/flyte/flyteidl/gen/pb"
  "-go/flyteidl/coreb\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_flyteidl_2fcore_2fexecution_5fenvs_2eproto = {
  false, InitDefaults_flyteidl_2fcore_2fexecution_5fenvs_2eproto, 
  descriptor_table_protodef_flyteidl_2fcore_2fexecution_5fenvs_2eproto,
  "flyteidl/core/execution_envs.proto", &assign_descriptors_table_flyteidl_2fcore_2fexecution_5fenvs_2eproto, 345,
};

void AddDescriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_google_2fprotobuf_2fstruct_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_flyteidl_2fcore_2fexecution_5fenvs_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_flyteidl_2fcore_2fexecution_5fenvs_2eproto = []() { AddDescriptors_flyteidl_2fcore_2fexecution_5fenvs_2eproto(); return true; }();
namespace flyteidl {
namespace core {

// ===================================================================

void ExecutionEnvironmentAssignment::InitAsDefaultInstance() {
  ::flyteidl::core::_ExecutionEnvironmentAssignment_default_instance_.environment_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
  ::flyteidl::core::_ExecutionEnvironmentAssignment_default_instance_.environment_spec_ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}
class ExecutionEnvironmentAssignment::HasBitSetters {
 public:
  static const ::google::protobuf::Struct& environment(const ExecutionEnvironmentAssignment* msg);
  static const ::google::protobuf::Struct& environment_spec(const ExecutionEnvironmentAssignment* msg);
};

const ::google::protobuf::Struct&
ExecutionEnvironmentAssignment::HasBitSetters::environment(const ExecutionEnvironmentAssignment* msg) {
  return *msg->assignment_.environment_;
}
const ::google::protobuf::Struct&
ExecutionEnvironmentAssignment::HasBitSetters::environment_spec(const ExecutionEnvironmentAssignment* msg) {
  return *msg->assignment_.environment_spec_;
}
void ExecutionEnvironmentAssignment::set_allocated_environment(::google::protobuf::Struct* environment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_assignment();
  if (environment) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(environment)->GetArena();
    if (message_arena != submessage_arena) {
      environment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, environment, submessage_arena);
    }
    set_has_environment();
    assignment_.environment_ = environment;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.ExecutionEnvironmentAssignment.environment)
}
void ExecutionEnvironmentAssignment::clear_environment() {
  if (has_environment()) {
    delete assignment_.environment_;
    clear_has_assignment();
  }
}
void ExecutionEnvironmentAssignment::set_allocated_environment_spec(::google::protobuf::Struct* environment_spec) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_assignment();
  if (environment_spec) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(environment_spec)->GetArena();
    if (message_arena != submessage_arena) {
      environment_spec = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, environment_spec, submessage_arena);
    }
    set_has_environment_spec();
    assignment_.environment_spec_ = environment_spec;
  }
  // @@protoc_insertion_point(field_set_allocated:flyteidl.core.ExecutionEnvironmentAssignment.environment_spec)
}
void ExecutionEnvironmentAssignment::clear_environment_spec() {
  if (has_environment_spec()) {
    delete assignment_.environment_spec_;
    clear_has_assignment();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExecutionEnvironmentAssignment::kIdFieldNumber;
const int ExecutionEnvironmentAssignment::kNodeIdsFieldNumber;
const int ExecutionEnvironmentAssignment::kTypeFieldNumber;
const int ExecutionEnvironmentAssignment::kEnvironmentFieldNumber;
const int ExecutionEnvironmentAssignment::kEnvironmentSpecFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExecutionEnvironmentAssignment::ExecutionEnvironmentAssignment()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:flyteidl.core.ExecutionEnvironmentAssignment)
}
ExecutionEnvironmentAssignment::ExecutionEnvironmentAssignment(const ExecutionEnvironmentAssignment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      node_ids_(from.node_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  clear_has_assignment();
  switch (from.assignment_case()) {
    case kEnvironment: {
      mutable_environment()->::google::protobuf::Struct::MergeFrom(from.environment());
      break;
    }
    case kEnvironmentSpec: {
      mutable_environment_spec()->::google::protobuf::Struct::MergeFrom(from.environment_spec());
      break;
    }
    case ASSIGNMENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:flyteidl.core.ExecutionEnvironmentAssignment)
}

void ExecutionEnvironmentAssignment::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_ExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto.base);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_assignment();
}

ExecutionEnvironmentAssignment::~ExecutionEnvironmentAssignment() {
  // @@protoc_insertion_point(destructor:flyteidl.core.ExecutionEnvironmentAssignment)
  SharedDtor();
}

void ExecutionEnvironmentAssignment::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_assignment()) {
    clear_assignment();
  }
}

void ExecutionEnvironmentAssignment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExecutionEnvironmentAssignment& ExecutionEnvironmentAssignment::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_ExecutionEnvironmentAssignment_flyteidl_2fcore_2fexecution_5fenvs_2eproto.base);
  return *internal_default_instance();
}


void ExecutionEnvironmentAssignment::clear_assignment() {
// @@protoc_insertion_point(one_of_clear_start:flyteidl.core.ExecutionEnvironmentAssignment)
  switch (assignment_case()) {
    case kEnvironment: {
      delete assignment_.environment_;
      break;
    }
    case kEnvironmentSpec: {
      delete assignment_.environment_spec_;
      break;
    }
    case ASSIGNMENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ASSIGNMENT_NOT_SET;
}


void ExecutionEnvironmentAssignment::Clear() {
// @@protoc_insertion_point(message_clear_start:flyteidl.core.ExecutionEnvironmentAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  node_ids_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_assignment();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* ExecutionEnvironmentAssignment::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<ExecutionEnvironmentAssignment*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.core.ExecutionEnvironmentAssignment.id");
        object = msg->mutable_id();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // repeated string node_ids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 18) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("flyteidl.core.ExecutionEnvironmentAssignment.node_ids");
          object = msg->add_node_ids();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 18 && (ptr += 1));
        break;
      }
      // string type = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 26) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        ctx->extra_parse_data().SetFieldName("flyteidl.core.ExecutionEnvironmentAssignment.type");
        object = msg->mutable_type();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // .google.protobuf.Struct environment = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_environment();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .google.protobuf.Struct environment_spec = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::google::protobuf::Struct::_InternalParse;
        object = msg->mutable_environment_spec();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool ExecutionEnvironmentAssignment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:flyteidl.core.ExecutionEnvironmentAssignment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionEnvironmentAssignment.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string node_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (18 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_node_ids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->node_ids(this->node_ids_size() - 1).data(),
            static_cast<int>(this->node_ids(this->node_ids_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionEnvironmentAssignment.node_ids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "flyteidl.core.ExecutionEnvironmentAssignment.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct environment = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_environment()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct environment_spec = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_environment_spec()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:flyteidl.core.ExecutionEnvironmentAssignment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:flyteidl.core.ExecutionEnvironmentAssignment)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void ExecutionEnvironmentAssignment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:flyteidl.core.ExecutionEnvironmentAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // repeated string node_ids = 2;
  for (int i = 0, n = this->node_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ids(i).data(), static_cast<int>(this->node_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.node_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->node_ids(i), output);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type(), output);
  }

  // .google.protobuf.Struct environment = 4;
  if (has_environment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::environment(this), output);
  }

  // .google.protobuf.Struct environment_spec = 5;
  if (has_environment_spec()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::environment_spec(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:flyteidl.core.ExecutionEnvironmentAssignment)
}

::google::protobuf::uint8* ExecutionEnvironmentAssignment::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:flyteidl.core.ExecutionEnvironmentAssignment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // repeated string node_ids = 2;
  for (int i = 0, n = this->node_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->node_ids(i).data(), static_cast<int>(this->node_ids(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.node_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->node_ids(i), target);
  }

  // string type = 3;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "flyteidl.core.ExecutionEnvironmentAssignment.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type(), target);
  }

  // .google.protobuf.Struct environment = 4;
  if (has_environment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::environment(this), target);
  }

  // .google.protobuf.Struct environment_spec = 5;
  if (has_environment_spec()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::environment_spec(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:flyteidl.core.ExecutionEnvironmentAssignment)
  return target;
}

size_t ExecutionEnvironmentAssignment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:flyteidl.core.ExecutionEnvironmentAssignment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string node_ids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->node_ids_size());
  for (int i = 0, n = this->node_ids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->node_ids(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string type = 3;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  switch (assignment_case()) {
    // .google.protobuf.Struct environment = 4;
    case kEnvironment: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *assignment_.environment_);
      break;
    }
    // .google.protobuf.Struct environment_spec = 5;
    case kEnvironmentSpec: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *assignment_.environment_spec_);
      break;
    }
    case ASSIGNMENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExecutionEnvironmentAssignment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:flyteidl.core.ExecutionEnvironmentAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  const ExecutionEnvironmentAssignment* source =
      ::google::protobuf::DynamicCastToGenerated<ExecutionEnvironmentAssignment>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:flyteidl.core.ExecutionEnvironmentAssignment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:flyteidl.core.ExecutionEnvironmentAssignment)
    MergeFrom(*source);
  }
}

void ExecutionEnvironmentAssignment::MergeFrom(const ExecutionEnvironmentAssignment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:flyteidl.core.ExecutionEnvironmentAssignment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  node_ids_.MergeFrom(from.node_ids_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  switch (from.assignment_case()) {
    case kEnvironment: {
      mutable_environment()->::google::protobuf::Struct::MergeFrom(from.environment());
      break;
    }
    case kEnvironmentSpec: {
      mutable_environment_spec()->::google::protobuf::Struct::MergeFrom(from.environment_spec());
      break;
    }
    case ASSIGNMENT_NOT_SET: {
      break;
    }
  }
}

void ExecutionEnvironmentAssignment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:flyteidl.core.ExecutionEnvironmentAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExecutionEnvironmentAssignment::CopyFrom(const ExecutionEnvironmentAssignment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:flyteidl.core.ExecutionEnvironmentAssignment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExecutionEnvironmentAssignment::IsInitialized() const {
  return true;
}

void ExecutionEnvironmentAssignment::Swap(ExecutionEnvironmentAssignment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExecutionEnvironmentAssignment::InternalSwap(ExecutionEnvironmentAssignment* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  node_ids_.InternalSwap(CastToBase(&other->node_ids_));
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(assignment_, other->assignment_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::google::protobuf::Metadata ExecutionEnvironmentAssignment::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_flyteidl_2fcore_2fexecution_5fenvs_2eproto);
  return ::file_level_metadata_flyteidl_2fcore_2fexecution_5fenvs_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
}  // namespace flyteidl
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::flyteidl::core::ExecutionEnvironmentAssignment* Arena::CreateMaybeMessage< ::flyteidl::core::ExecutionEnvironmentAssignment >(Arena* arena) {
  return Arena::CreateInternal< ::flyteidl::core::ExecutionEnvironmentAssignment >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
